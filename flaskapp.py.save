import sqlite3
from flask import Flask, request, g, render_template, redirect, url_for, session, flash

app = Flask(__name__)

app.secret_key = 'not_a_secret'

DATABASE = '/home/ubuntu/flaskapp/users.db'

def connect_to_database():
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users 
                  (username TEXT PRIMARY KEY, password TEXT, firstname TEXT,
                   lastname TEXT, email TEXT)''')
    conn.commit()
    return conn

@app.route('/')
def index():
    return render_template('register.html')

@app.route('/register', methods=['POST'])
def register():
    username = request.form['username']
    password = request.form['password']
    firstname = request.form['firstname']
    lastname = request.form['lastname']
    email = request.form['email']

    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    try:
        c.execute("INSERT INTO users (username, password, firstname, lastname, email) VALUES (?, ?, ?, ?, ?)",
                  (username, password, firstname, lastname, email))
        conn.commit()
    except sqlite3.IntegrityError:
        flash('Username already taken, please choose another', 'error')
        return redirect(url_for('index'))

@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    user = execute_query("SELECT * FROM users WHERE username = ? AND password = ?", [username, password])
    if user:
        session['username'] = username
        flash('You have successfully logged in!', 'success')
        return redirect(url_for('get_user', username=username))
    else:
        error = 'Invalid username or password'
        return render_template('register.html', error=error)

@app.route('/logout')
def logout():
    session.pop('username', None) 
    flash('You have successfully logged out!', 'info')
    return redirect(url_for('index'))

@app.route("/user/<username>")
def get_user(username):
    rows = execute_query("""SELECT * FROM users WHERE username = ?""", [username])
    if rows:
        return render_template('profile.html', user=rows[0])
    return "User not found"

def get_db():
    if 'db' not in g:
        g.db = connect_to_database()
    return g.db

@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, 'db', None)
    if db is not None:
        db.close()

def execute_query(query, args=()):
    cur = get_db().execute(query, args)
    rows = cur.fetchall()
    cur.close()
    return rows

@app.route("/viewdb")
def viewdb():
    rows = execute_query("""SELECT * FROM users""")
    return '<br>'.join(str(row) for row in rows)

if __name__ == '__main__':
    app.run(debug=True)
